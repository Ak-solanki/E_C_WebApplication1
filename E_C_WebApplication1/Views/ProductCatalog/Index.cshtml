@model E_C_WebApplication1.Models.ProductFilterViewModel

@{
    ViewBag.Title = "Product Catalog";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Product Catalog</h2>

@using (Html.BeginForm("Index", "ProductCatalog", FormMethod.Get))
{
    <div class="form-group" style="float:left;margin-left:5%">
        <label for="selectedCategory">Search</label>
        <input type="text" name="searchQuery" value="@Model.SearchQuery" placeholder="Search..." class="form-control" />
    </div>

    <div class="form-group" style="float:left;margin-left:5%">
        <label for="selectedCategory">Category</label>
        <select name="selectedCategory" id="selectedCategory" class="form-control">
            <option value="">All Categories</option>
            @foreach (var category in Model.Categories)
            {
                <option value="@category.Name" @(category.Name == Model.SelectedCategory ? "selected" : "")>@category.Name</option>
            }
        </select>
    </div>

    <div class="form-group" style="float:left;margin-left:6%">
        <label for="minPrice">Price Range</label>
        <input type="number" name="minPrice" id="minPrice" value="@Model.MinPrice" placeholder="Min Price" class="form-control" />
        <input type="number" name="maxPrice" id="maxPrice" value="@Model.MaxPrice" placeholder="Max Price" class="form-control" />
    </div>

    <div class="form-group" style="float:left;margin-left:6%">
        <label for="ratingRange">Rating Range</label>
        <input type="number" name="minRating" id="minRating" value="@Model.MinRating" placeholder="Min Rating" class="form-control" />
        <input type="number" name="maxRating" id="maxRating" value="@Model.MaxRating" placeholder="Max Rating" class="form-control" />
    </div>

    <div class="form-group" >
        <input type="submit" value="Filter" class="btn btn-primary" style="margin-left:5%"/>
    </div>
}

<table class="table">
    <thead>
        <tr>
            <th>Image</th>
            <th>@Html.DisplayNameFor(model => model.Products.First().Name)</th>
            <th>@Html.DisplayNameFor(model => model.Products.First().Price)</th>
            <th>@Html.DisplayNameFor(model => model.Products.First().Description)</th>
            <th>@Html.DisplayNameFor(model => model.Products.First().Category)</th>
            <th>@Html.DisplayNameFor(model => model.Products.First().StockQuantity)</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var product in Model.Products)
        {
            <tr>
                <td>
                    @if (product.Images.Any())
                    {
                        <img src="@product.Images.First().ImageUrl" alt="@product.Name" style="width: 100px; height: auto;" />
                    }
                    else
                    {
                        <span>No Image</span>
                    }
                </td>
                <td>@Html.DisplayFor(modelItem => product.Name)</td>
                <td>@Html.DisplayFor(modelItem => product.Price)</td>
                <td>@Html.DisplayFor(modelItem => product.Description)</td>
                <td>@Html.DisplayFor(modelItem => product.Category)</td>
                <td>@Html.DisplayFor(modelItem => product.StockQuantity)</td>
                <td>
                    @Html.ActionLink("View Details", "Details", new { id = product.ProductId })
                </td>
            </tr>
        }
    </tbody>
</table>

<nav aria-label="Page navigation">
    <ul class="pagination">
        @if (Model.CurrentPage > 1)
        {
            <li>
                @Html.ActionLink("Previous", "Index", new { page = Model.CurrentPage - 1, searchQuery = Model.SearchQuery, selectedCategory = Model.SelectedCategory, minPrice = Model.MinPrice, maxPrice = Model.MaxPrice, minRating = Model.MinRating, maxRating = Model.MaxRating }, null)
            </li>
        }
        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <li class="@(i == Model.CurrentPage ? "active" : "")">
                @Html.ActionLink(i.ToString(), "Index", new { page = i, searchQuery = Model.SearchQuery, selectedCategory = Model.SelectedCategory, minPrice = Model.MinPrice, maxPrice = Model.MaxPrice, minRating = Model.MinRating, maxRating = Model.MaxRating }, null)
            </li>
        }
        @if (Model.CurrentPage < Model.TotalPages)
        {
            <li>
                @Html.ActionLink("Next", "Index", new { page = Model.CurrentPage + 1, searchQuery = Model.SearchQuery, selectedCategory = Model.SelectedCategory, minPrice = Model.MinPrice, maxPrice = Model.MaxPrice, minRating = Model.MinRating, maxRating = Model.MaxRating }, null)
            </li>
        }
    </ul>
</nav>